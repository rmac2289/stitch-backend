{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rossmacdonald/Projects/stitchsell/frontend/lib/cartState.js\";\nimport { createContext, useContext, useState } from \"react\";\nconst LocalStateContext = /*#__PURE__*/createContext();\nconst LocaleStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({\n  children\n}) {\n  // this is our own custom provider\n  const {\n    0: cartOpen,\n    1: setCartOpen\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(LocaleStateProvider, {\n    value: {\n      cartOpen\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n} // custom hook for accessing cart state\n\n\nfunction useCart() {\n  // use consumer to access local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\n\nexport { CartStateProvider, useCart };","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/stitchsell/frontend/lib/cartState.js"],"names":["createContext","useContext","useState","LocalStateContext","LocaleStateProvider","Provider","CartStateProvider","children","cartOpen","setCartOpen","useCart","all"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,MAAMC,iBAAiB,gBAAGH,aAAa,EAAvC;AACA,MAAMI,mBAAmB,GAAGD,iBAAiB,CAACE,QAA9C;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAyC;AACvC;AACA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,sBACE,QAAC,mBAAD;AAAqB,IAAA,KAAK,EAAE;AAAEM,MAAAA;AAAF,KAA5B;AAAA,cAA2CD;AAA3C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CAED;;;AACA,SAASG,OAAT,GAAmB;AACjB;AACA,QAAMC,GAAG,GAAGV,UAAU,CAACE,iBAAD,CAAtB;AACA,SAAOQ,GAAP;AACD;;AACD,SAASL,iBAAT,EAA4BI,OAA5B","sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nconst LocalStateContext = createContext();\nconst LocaleStateProvider = LocalStateContext.Provider;\n\nfunction CartStateProvider({ children }) {\n  // this is our own custom provider\n  const [cartOpen, setCartOpen] = useState(false);\n  return (\n    <LocaleStateProvider value={{ cartOpen }}>{children}</LocaleStateProvider>\n  );\n}\n\n// custom hook for accessing cart state\nfunction useCart() {\n  // use consumer to access local state\n  const all = useContext(LocalStateContext);\n  return all;\n}\nexport { CartStateProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}