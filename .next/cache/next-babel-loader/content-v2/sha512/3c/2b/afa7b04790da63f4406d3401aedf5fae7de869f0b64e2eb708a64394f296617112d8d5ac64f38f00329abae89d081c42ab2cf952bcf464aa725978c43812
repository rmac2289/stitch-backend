{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rossmacdonald/Projects/stitchsell/frontend/components/SignUp.js\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport Error from \"./ErrorMessage\";\nimport { useState } from \"react\";\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  ) {\n    createUser(data: { email: $email, name: $name, password: $password }) {\n      id\n      email\n      name\n    }\n  }\n`;\nexport default function SignUp() {\n  const {\n    0: showForm,\n    1: setShowForm\n  } = useState(false);\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  });\n  const [signup, {\n    data,\n    loading,\n    error\n  }] = useMutation(SIGNUP_MUTATION, {\n    variables: inputs // refectch the currently logged in user\n    // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // stop the form from submitting\n\n    console.log(inputs);\n    const res = await signup().catch(console.error);\n    console.log(res);\n    console.log({\n      data,\n      loading,\n      error\n    });\n    resetForm(); // Send the email and password to the graphqlAPI\n  }\n\n  const toggleShow = () => {\n    setShowForm(!showForm);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: () => toggleShow(),\n      children: \"Sign up for an account.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(Form, {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Error, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [(data === null || data === void 0 ? void 0 : data.createUser) && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Signed up with \", data.createUser.email, \" - Please Go Head and Sign in!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Your Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Your Name\",\n            autoComplete: \"name\",\n            value: inputs.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Your Email Address\",\n            autoComplete: \"email\",\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            autoComplete: \"password\",\n            value: inputs.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/stitchsell/frontend/components/SignUp.js"],"names":["gql","useMutation","Form","useForm","Error","useState","SIGNUP_MUTATION","SignUp","showForm","setShowForm","inputs","handleChange","resetForm","email","name","password","signup","data","loading","error","variables","handleSubmit","e","preventDefault","console","log","res","catch","toggleShow","createUser"],"mappings":"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","sourcesContent":["import gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport Error from \"./ErrorMessage\";\nimport { useState } from \"react\";\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  ) {\n    createUser(data: { email: $email, name: $name, password: $password }) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nexport default function SignUp() {\n  const [showForm, setShowForm] = useState(false);\n  const { inputs, handleChange, resetForm } = useForm({\n    email: \"\",\n    name: \"\",\n    password: \"\",\n  });\n  const [signup, { data, loading, error }] = useMutation(SIGNUP_MUTATION, {\n    variables: inputs,\n    // refectch the currently logged in user\n    // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n  });\n  async function handleSubmit(e) {\n    e.preventDefault(); // stop the form from submitting\n    console.log(inputs);\n    const res = await signup().catch(console.error);\n    console.log(res);\n    console.log({ data, loading, error });\n    resetForm();\n    // Send the email and password to the graphqlAPI\n  }\n  const toggleShow = () => {\n    setShowForm(!showForm);\n  };\n  return (\n    <div>\n      <h2 onClick={() => toggleShow()}>Sign up for an account.</h2>\n      {showForm && (\n        <Form method=\"POST\" onSubmit={handleSubmit}>\n          <Error error={error} />\n          <fieldset>\n            {data?.createUser && (\n              <p>\n                Signed up with {data.createUser.email} - Please Go Head and Sign\n                in!\n              </p>\n            )}\n            <label htmlFor=\"email\">\n              Your Name\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Your Name\"\n                autoComplete=\"name\"\n                value={inputs.name}\n                onChange={handleChange}\n              />\n            </label>\n            <label htmlFor=\"email\">\n              Email\n              <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Your Email Address\"\n                autoComplete=\"email\"\n                value={inputs.email}\n                onChange={handleChange}\n              />\n            </label>\n            <label htmlFor=\"password\">\n              Password\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                autoComplete=\"password\"\n                value={inputs.password}\n                onChange={handleChange}\n              />\n            </label>\n            <button type=\"submit\">Sign Up</button>\n          </fieldset>\n        </Form>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}