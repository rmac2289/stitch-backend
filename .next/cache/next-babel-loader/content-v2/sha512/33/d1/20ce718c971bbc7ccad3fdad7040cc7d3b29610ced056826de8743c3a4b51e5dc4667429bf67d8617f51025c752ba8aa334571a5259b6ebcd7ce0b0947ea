{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rossmacdonald/Projects/stitchsell/frontend/components/DeleteProduct.js\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nconst DELETE_PRODUCT_MUTATION = gql`\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n    deleteProduct(id: $id) {\n      id\n      name\n    }\n  }\n`;\nexport default function DeleteProduct({\n  id,\n  children\n}) {\n  const [deleteProduct, {\n    loading\n  }] = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    disabled: loading,\n    onClick: () => {\n      if (confirm(\"Are you sure you want to delete this item?\")) {\n        deleteProduct().catch(err => alert(err.message));\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/stitchsell/frontend/components/DeleteProduct.js"],"names":["gql","useMutation","DELETE_PRODUCT_MUTATION","DeleteProduct","id","children","deleteProduct","loading","variables","confirm","catch","err","alert","message"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,MAAMC,uBAAuB,GAAGF,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAe,SAASG,aAAT,CAAuB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAvB,EAAyC;AACtD,QAAM,CAACC,aAAD,EAAgB;AAAEC,IAAAA;AAAF,GAAhB,IAA+BN,WAAW,CAACC,uBAAD,EAA0B;AACxEM,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AAD6D,GAA1B,CAAhD;AAGA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAEG,OAFZ;AAGE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIE,OAAO,CAAC,4CAAD,CAAX,EAA2D;AACzDH,QAAAA,aAAa,GAAGI,KAAhB,CAAuBC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAApC;AACD;AACF,KAPH;AAAA,cASGR;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD","sourcesContent":["import gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\n\nconst DELETE_PRODUCT_MUTATION = gql`\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n    deleteProduct(id: $id) {\n      id\n      name\n    }\n  }\n`;\n\nexport default function DeleteProduct({ id, children }) {\n  const [deleteProduct, { loading }] = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: { id },\n  });\n  return (\n    <button\n      type=\"button\"\n      disabled={loading}\n      onClick={() => {\n        if (confirm(\"Are you sure you want to delete this item?\")) {\n          deleteProduct().catch((err) => alert(err.message));\n        }\n      }}\n    >\n      {children}\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}