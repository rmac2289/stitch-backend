{"ast":null,"code":"import { PAGINATION_QUERY } from \"../components/Pagination\";\nexport default function paginationField() {\n  return {\n    keyArgs: false,\n    read: function read() {\n      var _data$_allProductsMet;\n\n      var existing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      var _ref = arguments.length > 1 ? arguments[1] : undefined,\n          args = _ref.args,\n          cache = _ref.cache;\n\n      console.log(existing, args, cache);\n      var skip = args.skip,\n          first = args.first;\n      var data = cache.readQuery({\n        query: PAGINATION_QUERY\n      });\n      var count = data === null || data === void 0 ? void 0 : (_data$_allProductsMet = data._allProductsMeta) === null || _data$_allProductsMet === void 0 ? void 0 : _data$_allProductsMet.count;\n      var page = skip / first + 1;\n      var pages = Math.ceil(count / first);\n      var items = existing.slice(skip, skip + first).filter(function (x) {\n        return x;\n      });\n\n      if (items.length !== first) {\n        // no items, go to network\n        return false;\n      }\n\n      if (items.length) {\n        console.log(\"There are \".concat(items.length, \" items in cache, sending to apollo\"));\n        return items;\n      }\n\n      return false;\n    },\n    merge: function merge() {}\n  };\n}","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/stitchsell/frontend/lib/paginationField.js"],"names":["PAGINATION_QUERY","paginationField","keyArgs","read","existing","args","cache","console","log","skip","first","data","readQuery","query","count","_allProductsMeta","page","pages","Math","ceil","items","slice","filter","x","length","merge"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,0BAAjC;AAEA,eAAe,SAASC,eAAT,GAA2B;AACxC,SAAO;AACLC,IAAAA,OAAO,EAAE,KADJ;AAELC,IAAAA,IAFK,kBAEgC;AAAA;;AAAA,UAAhCC,QAAgC,uEAArB,EAAqB;;AAAA;AAAA,UAAfC,IAAe,QAAfA,IAAe;AAAA,UAATC,KAAS,QAATA,KAAS;;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBC,IAAtB,EAA4BC,KAA5B;AADmC,UAE3BG,IAF2B,GAEXJ,IAFW,CAE3BI,IAF2B;AAAA,UAErBC,KAFqB,GAEXL,IAFW,CAErBK,KAFqB;AAGnC,UAAMC,IAAI,GAAGL,KAAK,CAACM,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEb;AAAT,OAAhB,CAAb;AACA,UAAMc,KAAK,GAAGH,IAAH,aAAGA,IAAH,gDAAGA,IAAI,CAAEI,gBAAT,0DAAG,sBAAwBD,KAAtC;AACA,UAAME,IAAI,GAAGP,IAAI,GAAGC,KAAP,GAAe,CAA5B;AACA,UAAMO,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGJ,KAAlB,CAAd;AACA,UAAMU,KAAK,GAAGhB,QAAQ,CAACiB,KAAT,CAAeZ,IAAf,EAAqBA,IAAI,GAAGC,KAA5B,EAAmCY,MAAnC,CAA0C,UAACC,CAAD;AAAA,eAAOA,CAAP;AAAA,OAA1C,CAAd;;AAEA,UAAIH,KAAK,CAACI,MAAN,KAAiBd,KAArB,EAA4B;AAC1B;AACA,eAAO,KAAP;AACD;;AACD,UAAIU,KAAK,CAACI,MAAV,EAAkB;AAChBjB,QAAAA,OAAO,CAACC,GAAR,qBACeY,KAAK,CAACI,MADrB;AAGA,eAAOJ,KAAP;AACD;;AACD,aAAO,KAAP;AACD,KAtBI;AAuBLK,IAAAA,KAvBK,mBAuBG,CAAE;AAvBL,GAAP;AAyBD","sourcesContent":["import { PAGINATION_QUERY } from \"../components/Pagination\";\n\nexport default function paginationField() {\n  return {\n    keyArgs: false,\n    read(existing = [], { args, cache }) {\n      console.log(existing, args, cache);\n      const { skip, first } = args;\n      const data = cache.readQuery({ query: PAGINATION_QUERY });\n      const count = data?._allProductsMeta?.count;\n      const page = skip / first + 1;\n      const pages = Math.ceil(count / first);\n      const items = existing.slice(skip, skip + first).filter((x) => x);\n\n      if (items.length !== first) {\n        // no items, go to network\n        return false;\n      }\n      if (items.length) {\n        console.log(\n          `There are ${items.length} items in cache, sending to apollo`\n        );\n        return items;\n      }\n      return false;\n    },\n    merge() {},\n  };\n}\n"]},"metadata":{},"sourceType":"module"}