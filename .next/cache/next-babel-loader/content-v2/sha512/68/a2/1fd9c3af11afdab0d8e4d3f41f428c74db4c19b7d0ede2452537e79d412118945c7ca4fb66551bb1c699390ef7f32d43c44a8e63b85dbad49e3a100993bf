{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rossmacdonald/Projects/stitchsell/frontend/components/CreateProduct.js\";\nimport { useMutation } from \"@apollo/client\";\nimport { gql } from \"graphql-tag\";\nimport { useState } from \"react\";\nimport useForm from \"../lib/useForm\";\nimport Form from \"./styles/Form\";\nconst CREATE_PRODUCT_MUTATION = gql`\n  mutation CREATE_PRODUCT_MUTATION(\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  ) {\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }\n`;\nexport default function CreateProduct() {\n  const {\n    inputs,\n    handleChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    image: \"\",\n    name: \"Product\",\n    price: 2400,\n    description: \"Awesome stitch\"\n  });\n  const [createProduct, {\n    loading,\n    error,\n    data\n  }] = useMutation(CREATE_PRODUCT_MUTATION, {\n    variables: inputs\n  });\n  console.log(createProduct);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: e => {\n      e.preventDefault();\n      console.log(inputs);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          onChange: handleChange,\n          type: \"file\",\n          id: \"image\",\n          name: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inputs.name,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: inputs.price,\n          onChange: handleChange,\n          type: \"text\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputs.description,\n          onChange: handleChange,\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/stitchsell/frontend/components/CreateProduct.js"],"names":["useMutation","gql","useState","useForm","Form","CREATE_PRODUCT_MUTATION","CreateProduct","inputs","handleChange","clearForm","resetForm","image","name","price","description","createProduct","loading","error","data","variables","console","log","e","preventDefault"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,MAAMC,uBAAuB,GAAGJ,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;AAwBA,eAAe,SAASK,aAAT,GAAyB;AACtC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAiDP,OAAO,CAAC;AAC7DQ,IAAAA,KAAK,EAAE,EADsD;AAE7DC,IAAAA,IAAI,EAAE,SAFuD;AAG7DC,IAAAA,KAAK,EAAE,IAHsD;AAI7DC,IAAAA,WAAW,EAAE;AAJgD,GAAD,CAA9D;AAOA,QAAM,CACJC,aADI,EAEJ;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAFI,IAGFlB,WAAW,CAACK,uBAAD,EAA0B;AAAEc,IAAAA,SAAS,EAAEZ;AAAb,GAA1B,CAHf;AAIAa,EAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACA,sBACE,QAAC,IAAD;AACE,IAAA,QAAQ,EAAGO,CAAD,IAAO;AACfA,MAAAA,CAAC,CAACC,cAAF;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACD,KAJH;AAAA,2BAME;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,QAAQ,EAAEC,YAFZ;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,EAAE,EAAC,OAJL;AAKE,UAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA,wCAEE;AACE,UAAA,KAAK,EAAED,MAAM,CAACK,IADhB;AAEE,UAAA,QAAQ,EAAEJ,YAFZ;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,EAAE,EAAC,MAJL;AAKE,UAAA,IAAI,EAAC,MALP;AAME,UAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAsBE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,wCAEE;AACE,UAAA,KAAK,EAAED,MAAM,CAACM,KADhB;AAEE,UAAA,QAAQ,EAAEL,YAFZ;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,EAAE,EAAC,OAJL;AAKE,UAAA,IAAI,EAAC,OALP;AAME,UAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eAiCE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA,+CAEE;AACE,UAAA,KAAK,EAAED,MAAM,CAACO,WADhB;AAEE,UAAA,QAAQ,EAAEN,YAFZ;AAGE,UAAA,EAAE,EAAC,aAHL;AAIE,UAAA,IAAI,EAAC,aAJP;AAKE,UAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF,eA2CE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport { gql } from \"graphql-tag\";\nimport { useState } from \"react\";\nimport useForm from \"../lib/useForm\";\nimport Form from \"./styles/Form\";\n\nconst CREATE_PRODUCT_MUTATION = gql`\n  mutation CREATE_PRODUCT_MUTATION(\n    $name: String!\n    $description: String!\n    $price: Int!\n    $image: Upload\n  ) {\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        price: $price\n        status: \"AVAILABLE\"\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      price\n      description\n      name\n    }\n  }\n`;\n\nexport default function CreateProduct() {\n  const { inputs, handleChange, clearForm, resetForm } = useForm({\n    image: \"\",\n    name: \"Product\",\n    price: 2400,\n    description: \"Awesome stitch\",\n  });\n\n  const [\n    createProduct,\n    { loading, error, data },\n  ] = useMutation(CREATE_PRODUCT_MUTATION, { variables: inputs });\n  console.log(createProduct);\n  return (\n    <Form\n      onSubmit={(e) => {\n        e.preventDefault();\n        console.log(inputs);\n      }}\n    >\n      <fieldset>\n        <label htmlFor=\"image\">\n          Image\n          <input\n            required\n            onChange={handleChange}\n            type=\"file\"\n            id=\"image\"\n            name=\"image\"\n          />\n        </label>\n        <label htmlFor=\"name\">\n          Name\n          <input\n            value={inputs.name}\n            onChange={handleChange}\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"name\"\n          />\n        </label>\n        <label htmlFor=\"price\">\n          Name\n          <input\n            value={inputs.price}\n            onChange={handleChange}\n            type=\"text\"\n            id=\"price\"\n            name=\"price\"\n            placeholder=\"price\"\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Description\n          <textarea\n            value={inputs.description}\n            onChange={handleChange}\n            id=\"description\"\n            name=\"description\"\n            placeholder=\"description\"\n          />\n        </label>\n        <button type=\"submit\">Add Product</button>\n      </fieldset>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}