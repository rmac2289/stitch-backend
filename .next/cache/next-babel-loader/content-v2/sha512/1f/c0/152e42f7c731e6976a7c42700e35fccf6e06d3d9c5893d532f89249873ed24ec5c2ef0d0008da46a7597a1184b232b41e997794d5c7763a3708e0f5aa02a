{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rossmacdonald/Projects/stitchsell/frontend/pages/orders.js\";\nimport { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport Head from \"next/head\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport formatMoney from \"../lib/formatMoney\";\nimport OrderItemStyles from \"../components/styles/OrderItemStyles\";\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nconst OrderUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  grid-gap: 4rem;\n  li {\n    transition: 0.3s all ease;\n  }\n  li:hover {\n    transform: scale(1.05);\n  }\n  a {\n    text-decoration: none;\n  }\n`;\n\nfunction countItemsInAnOrder(order) {\n  return order.items.reduce((tally, item) => tally + item.quantity, 0);\n}\n\nexport default function OrdersPage() {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 21\n  }, this);\n  const {\n    allOrders\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Your Orders (\", allOrders.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You have \", allOrders.length, \" orders!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderUl, {\n      children: allOrders.map(order => /*#__PURE__*/_jsxDEV(OrderItemStyles, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `/order/${order.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"order-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [countItemsInAnOrder(order), \" Item\", countItemsInAnOrder(order) > 1 && \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [order.items.length, \" Product\", order.items.length > 1 && \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: formatMoney(order.total)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"images\",\n              children: order.items.map(item => {\n                var _item$photo, _item$photo$image;\n\n                return /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_item$photo = item.photo) === null || _item$photo === void 0 ? void 0 : (_item$photo$image = _item$photo.image) === null || _item$photo$image === void 0 ? void 0 : _item$photo$image.publicUrlTransformed,\n                  alt: item.name\n                }, `image-${item.id}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/stitchsell/frontend/pages/orders.js"],"names":["useQuery","gql","Head","styled","Link","ErrorMessage","formatMoney","OrderItemStyles","USER_ORDERS_QUERY","OrderUl","ul","countItemsInAnOrder","order","items","reduce","tally","item","quantity","OrdersPage","data","error","loading","allOrders","length","map","id","total","photo","image","publicUrlTransformed","name"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AAEA,MAAMC,iBAAiB,GAAGP,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;AAyBA,MAAMQ,OAAO,GAAGN,MAAM,CAACO,EAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAeA,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAClC,SAAOA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmB,CAACC,KAAD,EAAQC,IAAR,KAAiBD,KAAK,GAAGC,IAAI,CAACC,QAAjD,EAA2D,CAA3D,CAAP;AACD;;AAED,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BrB,QAAQ,CAACQ,iBAAD,CAAzC;AACA,MAAIa,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,QAAM;AAAEE,IAAAA;AAAF,MAAgBH,IAAtB;AACA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,oCAAqBG,SAAS,CAACC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8BAAcD,SAAS,CAACC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,OAAD;AAAA,gBACGD,SAAS,CAACE,GAAV,CAAeZ,KAAD,iBACb,QAAC,eAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,UAASA,KAAK,CAACa,EAAG,EAA/B;AAAA,iCACE;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,sCACE;AAAA,2BACGd,mBAAmB,CAACC,KAAD,CADtB,WAEGD,mBAAmB,CAACC,KAAD,CAAnB,GAA6B,CAA7B,IAAkC,GAFrC;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAA,2BACGA,KAAK,CAACC,KAAN,CAAYU,MADf,cAEGX,KAAK,CAACC,KAAN,CAAYU,MAAZ,GAAqB,CAArB,IAA0B,GAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eASE;AAAA,0BAAIjB,WAAW,CAACM,KAAK,CAACc,KAAP;AAAf;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,wBACGd,KAAK,CAACC,KAAN,CAAYW,GAAZ,CAAiBR,IAAD;AAAA;;AAAA,oCACf;AAEE,kBAAA,GAAG,iBAAEA,IAAI,CAACW,KAAP,qEAAE,YAAYC,KAAd,sDAAE,kBAAmBC,oBAF1B;AAGE,kBAAA,GAAG,EAAEb,IAAI,CAACc;AAHZ,mBACQ,SAAQd,IAAI,CAACS,EAAG,EADxB;AAAA;AAAA;AAAA;AAAA,wBADe;AAAA,eAAhB;AADH;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAsBb,KAAK,CAACa,EAA5B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport Head from \"next/head\";\nimport styled from \"styled-components\";\nimport Link from \"next/link\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport formatMoney from \"../lib/formatMoney\";\nimport OrderItemStyles from \"../components/styles/OrderItemStyles\";\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        price\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst OrderUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  grid-gap: 4rem;\n  li {\n    transition: 0.3s all ease;\n  }\n  li:hover {\n    transform: scale(1.05);\n  }\n  a {\n    text-decoration: none;\n  }\n`;\n\nfunction countItemsInAnOrder(order) {\n  return order.items.reduce((tally, item) => tally + item.quantity, 0);\n}\n\nexport default function OrdersPage() {\n  const { data, error, loading } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <ErrorMessage error={error} />;\n  const { allOrders } = data;\n  return (\n    <div>\n      <Head>\n        <title>Your Orders ({allOrders.length})</title>\n      </Head>\n      <h2>You have {allOrders.length} orders!</h2>\n      <OrderUl>\n        {allOrders.map((order) => (\n          <OrderItemStyles key={order.id}>\n            <Link href={`/order/${order.id}`}>\n              <a>\n                <div className=\"order-meta\">\n                  <p>\n                    {countItemsInAnOrder(order)} Item\n                    {countItemsInAnOrder(order) > 1 && \"s\"}\n                  </p>\n                  <p>\n                    {order.items.length} Product\n                    {order.items.length > 1 && \"s\"}\n                  </p>\n                  <p>{formatMoney(order.total)}</p>\n                </div>\n                <div className=\"images\">\n                  {order.items.map((item) => (\n                    <img\n                      key={`image-${item.id}`}\n                      src={item.photo?.image?.publicUrlTransformed}\n                      alt={item.name}\n                    />\n                  ))}\n                </div>\n              </a>\n            </Link>\n          </OrderItemStyles>\n        ))}\n      </OrderUl>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}