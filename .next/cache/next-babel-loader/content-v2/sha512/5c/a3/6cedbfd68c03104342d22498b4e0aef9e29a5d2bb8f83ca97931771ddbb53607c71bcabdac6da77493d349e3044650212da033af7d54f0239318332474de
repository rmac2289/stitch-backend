{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rossmacdonald/Projects/stitchsell/frontend/components/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useLazyQuery } from \"@apollo/client\";\nimport { resetIdCounter, useCombobox } from \"downshift\";\nimport gql from \"graphql-tag\";\nimport { debounce } from \"lodash\";\nimport { SearchStyles, DropDown, DropDownItem } from \"./styles/DropDown\";\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n    allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nexport default function Search() {\n  const [findItems, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: \"no-cache\"\n  });\n  resetIdCounter();\n  const findItemsButChill = debounce(findItems, 350);\n  const {\n    getMenuProps,\n    getInputProps,\n    getComboboxProps\n  } = useCombobox({\n    items: [],\n\n    onInputValueChange() {\n      console.log(\"input changed\");\n    },\n\n    onSelectedItemChange() {\n      console.log(\"selected item change\");\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps({\n        type: \"search\",\n        placeholder: \"Search for an Item\",\n        id: \"search\",\n        className: \"loading\"\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"hey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/stitchsell/frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","SearchStyles","DropDown","DropDownItem","SEARCH_PRODUCTS_QUERY","Search","findItems","loading","data","error","fetchPolicy","findItemsButChill","getMenuProps","getInputProps","getComboboxProps","items","onInputValueChange","console","log","onSelectedItemChange","type","placeholder","id","className"],"mappings":";;;;;;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,MAAMC,qBAAqB,GAAGL,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAqBA,eAAe,SAASM,MAAT,GAAkB;AAC/B,QAAM,CACJC,SADI,EAEJ;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAFI,IAGFb,YAAY,CAACQ,qBAAD,EAAwB;AAAEM,IAAAA,WAAW,EAAE;AAAf,GAAxB,CAHhB;AAIAb,EAAAA,cAAc;AACd,QAAMc,iBAAiB,GAAGX,QAAQ,CAACM,SAAD,EAAY,GAAZ,CAAlC;AACA,QAAM;AAAEM,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAoDhB,WAAW,CAAC;AACpEiB,IAAAA,KAAK,EAAE,EAD6D;;AAEpEC,IAAAA,kBAAkB,GAAG;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,KAJmE;;AAKpEC,IAAAA,oBAAoB,GAAG;AACrBF,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;;AAPmE,GAAD,CAArE;AASA,sBACE,QAAC,YAAD;AAAA,4BACE,+CAASJ,gBAAgB,EAAzB;AAAA,6BACE,mCACMD,aAAa,CAAC;AAChBO,QAAAA,IAAI,EAAE,QADU;AAEhBC,QAAAA,WAAW,EAAE,oBAFG;AAGhBC,QAAAA,EAAE,EAAE,QAHY;AAIhBC,QAAAA,SAAS,EAAE;AAJK,OAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,QAAD,kCAAcX,YAAY,EAA1B;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD","sourcesContent":["import { useLazyQuery } from \"@apollo/client\";\nimport { resetIdCounter, useCombobox } from \"downshift\";\nimport gql from \"graphql-tag\";\nimport { debounce } from \"lodash\";\nimport { SearchStyles, DropDown, DropDownItem } from \"./styles/DropDown\";\n\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n    allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nexport default function Search() {\n  const [\n    findItems,\n    { loading, data, error },\n  ] = useLazyQuery(SEARCH_PRODUCTS_QUERY, { fetchPolicy: \"no-cache\" });\n  resetIdCounter();\n  const findItemsButChill = debounce(findItems, 350);\n  const { getMenuProps, getInputProps, getComboboxProps } = useCombobox({\n    items: [],\n    onInputValueChange() {\n      console.log(\"input changed\");\n    },\n    onSelectedItemChange() {\n      console.log(\"selected item change\");\n    },\n  });\n  return (\n    <SearchStyles>\n      <div {...getComboboxProps()}>\n        <input\n          {...getInputProps({\n            type: \"search\",\n            placeholder: \"Search for an Item\",\n            id: \"search\",\n            className: \"loading\",\n          })}\n        />\n      </div>\n      <DropDown {...getMenuProps()}>\n        <DropDownItem>hello</DropDownItem>\n        <DropDownItem>hey</DropDownItem>\n      </DropDown>\n    </SearchStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}