{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rossmacdonald/Projects/stitchsell/frontend/components/SignIn.js\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport Error from \"./ErrorMessage\";\nimport { useRouter } from \"next/router\";\nimport { motion } from \"framer-motion\";\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }\n`;\nexport default function SignIn() {\n  const router = useRouter();\n  const {\n    inputs,\n    handleChange,\n    resetForm\n  } = useForm({\n    email: \"\",\n    password: \"\"\n  });\n  const [signin, {\n    data,\n    loading\n  }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    // refetch the currently logged in user\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // stop the form from submitting\n\n    const res = await signin();\n    resetForm();\n    res.data.authenticateUserWithPassword.code !== \"FAILURE\" ? router.push(\"/\") : null; // Send the email and password to the graphqlAPI\n  }\n\n  const error = (data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword.__typename) === \"UserAuthenticationWithPasswordFailure\" ? data === null || data === void 0 ? void 0 : data.authenticateUserWithPassword : undefined;\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    transition: {\n      duration: 0.5\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: \"POST\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Into Your Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Error, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Your Email Address\",\n            autoComplete: \"email\",\n            value: inputs.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            autoComplete: \"password\",\n            value: inputs.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/stitchsell/frontend/components/SignIn.js"],"names":["gql","useMutation","Form","useForm","CURRENT_USER_QUERY","Error","useRouter","motion","SIGNIN_MUTATION","SignIn","router","inputs","handleChange","resetForm","email","password","signin","data","loading","variables","refetchQueries","query","handleSubmit","e","preventDefault","res","authenticateUserWithPassword","code","push","error","__typename","undefined","opacity","duration"],"mappings":"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","sourcesContent":["import gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/client\";\nimport Form from \"./styles/Form\";\nimport useForm from \"../lib/useForm\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport Error from \"./ErrorMessage\";\nimport { useRouter } from \"next/router\";\nimport { motion } from \"framer-motion\";\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      ... on UserAuthenticationWithPasswordSuccess {\n        item {\n          id\n          email\n          name\n        }\n      }\n      ... on UserAuthenticationWithPasswordFailure {\n        code\n        message\n      }\n    }\n  }\n`;\n\nexport default function SignIn() {\n  const router = useRouter();\n  const { inputs, handleChange, resetForm } = useForm({\n    email: \"\",\n    password: \"\",\n  });\n  const [signin, { data, loading }] = useMutation(SIGNIN_MUTATION, {\n    variables: inputs,\n    // refetch the currently logged in user\n    refetchQueries: [{ query: CURRENT_USER_QUERY }],\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // stop the form from submitting\n    const res = await signin();\n    resetForm();\n    res.data.authenticateUserWithPassword.code !== \"FAILURE\"\n      ? router.push(\"/\")\n      : null;\n    // Send the email and password to the graphqlAPI\n  }\n  const error =\n    data?.authenticateUserWithPassword.__typename ===\n    \"UserAuthenticationWithPasswordFailure\"\n      ? data?.authenticateUserWithPassword\n      : undefined;\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      transition={{ duration: 0.5 }}\n    >\n      <Form method=\"POST\" onSubmit={handleSubmit}>\n        <h2>Sign Into Your Account</h2>\n        <Error error={error} />\n        <fieldset>\n          <label htmlFor=\"email\">\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Your Email Address\"\n              autoComplete=\"email\"\n              value={inputs.email}\n              onChange={handleChange}\n            />\n          </label>\n          <label htmlFor=\"password\">\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              autoComplete=\"password\"\n              value={inputs.password}\n              onChange={handleChange}\n            />\n          </label>\n          <button type=\"submit\">Sign In</button>\n        </fieldset>\n      </Form>\n    </motion.div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}