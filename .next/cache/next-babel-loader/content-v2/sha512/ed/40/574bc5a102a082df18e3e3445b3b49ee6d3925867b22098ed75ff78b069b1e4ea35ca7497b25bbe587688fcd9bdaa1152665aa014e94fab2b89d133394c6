{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/rossmacdonald/Projects/stitchsell/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/rossmacdonald/Projects/stitchsell/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/rossmacdonald/Projects/stitchsell/frontend/components/AddToCart.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation ADD_TO_CART_MUTATION($id: ID!) {\\n    addToCart(productId: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport \"@fortawesome/fontawesome-svg-core\";\nvar ADD_TO_CART_MUTATION = gql(_templateObject());\nexport default function AddToCart(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useMutation = useMutation(ADD_TO_CART_MUTATION, {\n    variables: {\n      id: id\n    },\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addToCart = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontFamily: \"radnika_next\"\n    },\n    disabled: loading,\n    type: \"button\",\n    onClick: addToCart,\n    children: [\"Add\", loading && \"ing\", \" To Cart\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: \"1.5rem\",\n        marginLeft: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faShoppingCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddToCart, \"0aUF08z5KB1kKj1IAAtYYFUdh4k=\", false, function () {\n  return [useMutation];\n});\n\n_c = AddToCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToCart\");","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/stitchsell/frontend/components/AddToCart.js"],"names":["useMutation","gql","CURRENT_USER_QUERY","FontAwesomeIcon","faShoppingCart","ADD_TO_CART_MUTATION","AddToCart","id","variables","refetchQueries","query","addToCart","loading","display","justifyContent","alignItems","fontFamily","fontSize","marginLeft"],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,cAAT,QAA+B,mCAA/B;AACA,OAAO,mCAAP;AAEA,IAAMC,oBAAoB,GAAGJ,GAAH,mBAA1B;AAQA,eAAe,SAASK,SAAT,OAA2B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,qBACPP,WAAW,CAACK,oBAAD,EAAuB;AACjEG,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF,KADsD;AAEjEE,IAAAA,cAAc,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAER;AAAT,KAAD;AAFiD,GAAvB,CADJ;AAAA;AAAA,MACjCS,SADiC;AAAA,MACpBC,OADoB,oBACpBA,OADoB;;AAKxC,sBACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,UAAU,EAAE;AAJP,KADT;AAOE,IAAA,QAAQ,EAAEJ,OAPZ;AAQE,IAAA,IAAI,EAAC,QARP;AASE,IAAA,OAAO,EAAED,SATX;AAAA,sBAWMC,OAAO,IAAI,KAXjB,cAWgC,GAXhC,eAYE;AAAM,MAAA,KAAK,EAAE;AAAEK,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,UAAU,EAAE;AAAlC,OAAb;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEd;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAvBuBE,S;UACWN,W;;;KADXM,S","sourcesContent":["import { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { CURRENT_USER_QUERY } from \"./User\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\nimport \"@fortawesome/fontawesome-svg-core\";\n\nconst ADD_TO_CART_MUTATION = gql`\n  mutation ADD_TO_CART_MUTATION($id: ID!) {\n    addToCart(productId: $id) {\n      id\n    }\n  }\n`;\n\nexport default function AddToCart({ id }) {\n  const [addToCart, { loading }] = useMutation(ADD_TO_CART_MUTATION, {\n    variables: { id },\n    refetchQueries: [{ query: CURRENT_USER_QUERY }],\n  });\n  return (\n    <button\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontFamily: \"radnika_next\",\n      }}\n      disabled={loading}\n      type=\"button\"\n      onClick={addToCart}\n    >\n      Add{loading && \"ing\"} To Cart{\" \"}\n      <span style={{ fontSize: \"1.5rem\", marginLeft: \"10px\" }}>\n        <FontAwesomeIcon icon={faShoppingCart} />\n      </span>\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}