{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/rossmacdonald/Projects/stitchsell/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/rossmacdonald/Projects/stitchsell/frontend/components/Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ALL_PRODUCTS_QUERY {\\n        allProducts {\\n            id\\n            name\\n            price\\n            description\\n            photo {\\n                id\\n                image {\\n                    publicUrlTransformed\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nvar ALL_PRODUCTS_QUERY = gql(_templateObject());\nexport default function Products() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log(data, error, loading);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.allProducts.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.name\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 46\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/rossmacdonald/Projects/stitchsell/frontend/components/Products.js"],"names":["useQuery","gql","ALL_PRODUCTS_QUERY","Products","data","error","loading","console","log","message","allProducts","map","product","name","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,kBAAkB,GAAGD,GAAH,mBAAxB;AAgBA,eAAe,SAASE,QAAT,GAAmB;AAAA;;AAAA;;AAAA,kBACGH,QAAQ,CAACE,kBAAD,CADX;AAAA,MACtBE,IADsB,aACtBA,IADsB;AAAA,MAChBC,KADgB,aAChBA,KADgB;AAAA,MACTC,OADS,aACTA,OADS;;AAE9BC,EAAAA,OAAO,CAACC,GAAR,CAAaJ,IAAb,EAAmBC,KAAnB,EAA0BC,OAA1B;AACA,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE;AAAA,gBACKL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqB,UAAAC,OAAO;AAAA,4BAAI;AAAA,oBAAqBA,OAAO,CAACC;AAA7B,WAAQD,OAAO,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,iBAAJ;AAAA,OAA5B;AADL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAME;;GAXkBX,Q;UACaH,Q;;;KADbG,Q","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\n\nconst ALL_PRODUCTS_QUERY = gql`\n    query ALL_PRODUCTS_QUERY {\n        allProducts {\n            id\n            name\n            price\n            description\n            photo {\n                id\n                image {\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`\nexport default function Products(){\n    const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY);\n    console.log( data, error, loading )\n    if (loading) return <p>Loading...</p>\n    if (error) return <p>Error: {error.message}</p>\n    return (\n      <div>\n        <div>\n            {data.allProducts.map(product => <p key={product.id}>{product.name}</p>)}\n        </div>\n      </div>\n    )}"]},"metadata":{},"sourceType":"module"}